// Mocks generated by Mockito 5.3.0 from annotations
// in labo_flutter/test/favorite_article_list_page_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:graphql_flutter/graphql_flutter.dart' as _i6;
import 'package:hooks_riverpod/hooks_riverpod.dart' as _i4;
import 'package:labo_flutter/models/favorite/favorite.dart' as _i7;
import 'package:labo_flutter/pages/favorite_article_list/favorite_article_list_page_notifier.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pull_to_refresh/pull_to_refresh.dart' as _i2;
import 'package:state_notifier/state_notifier.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRefreshController_0 extends _i1.SmartFake
    implements _i2.RefreshController {
  _FakeRefreshController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFavoriteArticleListPageState_1 extends _i1.SmartFake
    implements _i3.FavoriteArticleListPageState {
  _FakeFavoriteArticleListPageState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoriteArticleListPageNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteArticleListPageNotifier extends _i1.Mock
    implements _i3.FavoriteArticleListPageNotifier {
  MockFavoriteArticleListPageNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RefreshController get refreshController => (super.noSuchMethod(
        Invocation.getter(#refreshController),
        returnValue: _FakeRefreshController_0(
          this,
          Invocation.getter(#refreshController),
        ),
      ) as _i2.RefreshController);
  @override
  set onError(_i4.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);
  @override
  _i5.Stream<_i3.FavoriteArticleListPageState> get stream =>
      (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.FavoriteArticleListPageState>.empty(),
      ) as _i5.Stream<_i3.FavoriteArticleListPageState>);
  @override
  _i3.FavoriteArticleListPageState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFavoriteArticleListPageState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.FavoriteArticleListPageState);
  @override
  set state(_i3.FavoriteArticleListPageState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.FavoriteArticleListPageState get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeFavoriteArticleListPageState_1(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i3.FavoriteArticleListPageState);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> fetchFavorites() => (super.noSuchMethod(
        Invocation.method(
          #fetchFavorites,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> onLoadMore() => (super.noSuchMethod(
        Invocation.method(
          #onLoadMore,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void setVariablesForLoadMore(
    _i6.QueryResult<Object?>? result,
    int? lengthOfList,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setVariablesForLoadMore,
          [
            result,
            lengthOfList,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> onRefresh() => (super.noSuchMethod(
        Invocation.method(
          #onRefresh,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void deleteFavoriteOnLocal(_i7.Favorite? favorite) => super.noSuchMethod(
        Invocation.method(
          #deleteFavoriteOnLocal,
          [favorite],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<bool> deleteFavoriteOnServer(_i7.Favorite? favorite) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFavoriteOnServer,
          [favorite],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  bool updateShouldNotify(
    _i3.FavoriteArticleListPageState? old,
    _i3.FavoriteArticleListPageState? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i4.RemoveListener addListener(
    _i8.Listener<_i3.FavoriteArticleListPageState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i4.RemoveListener);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
